<?php
ob_start();
ini_set('display_errors', 0);
ini_set('display_startup_errors', 0);
error_reporting(0); // –û—Ç–∫–ª—é—á–∞–µ–º –í–°–ï –æ—Ç—á–µ—Ç—ã –æ–± –æ—à–∏–±–∫–∞—Ö
ini_set('log_errors', 0); // –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫

// === –§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ===
function getPostInput(string $key, string $default = '–ù–µ —É–∫–∞–∑–∞–Ω–æ'): string {
    return trim($_POST[$key] ?? $default); // –£–±—Ä–∞–Ω–æ htmlspecialchars
}

function getCheckboxGroup(string $name): string {
    if (empty($_POST[$name])) return '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    return is_array($_POST[$name]) 
        ? implode(', ', $_POST[$name]) 
        : $_POST[$name];
}

// === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ===
$token = getenv('BOT_API_TOKEN');
$chatId = getenv('LADY_ID');

if (!$token || !$chatId) {
    // –ë–µ–∑ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≤—ã–≤–æ–¥–æ–≤
    header("Location: /error.php");
    exit;
}

// Honeypot + consent
if (!empty($_POST['email_confirm']) || !isset($_POST['consent'])) {
    header("Location: /error.php");
    exit;
}

// === –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Å –æ—á–∏—Å—Ç–∫–æ–π ===
$contact = getPostInput('contact');
$message = getPostInput('message', '–ë–µ–∑ –º—ã—Å–ª–µ–π');
$project = getCheckboxGroup('project');
$budget = getCheckboxGroup('budget');
$formTime = $_POST['form_timestamp'] ?? date('Y-m-d H:i:s');

// === –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è ===
$text = "–í–æ—É-–≤–æ—É, –õ–µ–¥–∏\nüìù –ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É-–ø–æ—Å—Ä–µ–¥–Ω–∏–∫:\n\n"
      . "üìû –ö–æ–Ω—Ç–∞–∫—Ç: $contact\n"
      . "üìå –ü—Ä–æ–µ–∫—Ç: $project\n"
      . "üí∞ –ë—é–¥–∂–µ—Ç: $budget\n"
      . "üìÖ –í—Ä–µ–º—è: $formTime\n"
      . "üí≠ –°–æ–æ–±—â–µ–Ω–∏–µ: $message";

// === –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ Telegram ===
$sendUrl = "https://api.telegram.org/bot{$token}/sendMessage?" . http_build_query([
    'chat_id' => $chatId,
    'text' => $text
]);

$context = stream_context_create(['http' => ['timeout' => 5]]);
$response = @file_get_contents($sendUrl, false, $context);

// === –ì–ª—É–±–æ–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏ ===
function deepClean() {
    foreach ($_POST as $key => $value) {
        if (is_array($value)) {
            array_walk_recursive($value, function(&$item) {
                $item = str_repeat('x', strlen($item));
            });
        }
        $_POST[$key] = str_repeat('x', strlen($value));
    }
    unset($_POST);
}
deepClean();

// –°–µ—Å—Å–∏—è —É–Ω–∏—á—Ç–æ–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–∞
if (session_status() === PHP_SESSION_ACTIVE) {
    $_SESSION = [];
    session_destroy();
}

// –í—Å–µ–≥–¥–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç
if ($response !== false) {
    header("Location: /thanku.php");
} else {
    header("Location: /error.php");
}
exit;
